<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>花開清葉</title>
  
  <subtitle>liaaaaa是5个a啊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liaaaaa.github.io/"/>
  <updated>2018-12-20T11:04:57.775Z</updated>
  <id>http://liaaaaa.github.io/</id>
  
  <author>
    <name>小栗子</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unity3D 总结</title>
    <link href="http://liaaaaa.github.io/2018/12/Unity3D-%E6%80%BB%E7%BB%93/"/>
    <id>http://liaaaaa.github.io/2018/12/Unity3D-总结/</id>
    <published>2018-12-19T10:48:50.000Z</published>
    <updated>2018-12-20T11:04:57.775Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TerrainData"><a href="#TerrainData" class="headerlink" title="TerrainData"></a>TerrainData</h2><h3 id="GetHeight-改成根据世界坐标来获取地形上的高度"><a href="#GetHeight-改成根据世界坐标来获取地形上的高度" class="headerlink" title="GetHeight 改成根据世界坐标来获取地形上的高度"></a>GetHeight 改成根据世界坐标来获取地形上的高度</h3><p>内置方法需要用在高度图内的x, y的索引值才能获得高度，<del>利用竖直Ray，</del>利用内置方法terrain.SampleHeight(Vector3)就可以根据世界坐标中的x,z来获得地形上的y。<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Vector3 <span class="title">GetHeightInTerrain</span>(<span class="params">Terrain terrain, <span class="keyword">float</span> x, <span class="keyword">float</span> y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Ray ray = <span class="keyword">new</span> Ray(<span class="keyword">new</span> Vector3(x, <span class="number">0</span>, y), Vector3.up);</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    <span class="keyword">if</span> (Physics.Raycast(ray, <span class="keyword">out</span> hit, Mathf.Infinity))</span><br><span class="line">        <span class="keyword">return</span> hit.point;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Vector3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><del>弊端是如果地形上没有这个点，返回的这个点可能需要在调用的地方做个判断。</del></p><hr><h3 id="TreeInstances"><a href="#TreeInstances" class="headerlink" title="TreeInstances"></a>TreeInstances</h3><p>先是建了一些树，一开始还煞费苦心想得到世界坐标系中完美的地形上的种树点，最后发现y值根本不重要。随机出0~1f范围内的x和z就可以直接建树了。<br>想在退出时删掉所有树。treeInstances是内建数组，不能直接修改，需要新建数组读出，修改，再写入。</p><p><strong>参考</strong>:<a href="https://blog.csdn.net/smilingeyes/article/details/41848001" target="_blank" rel="noopener">U3D运行时修改地型中的树木</a><br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddTree</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeInstance tempInstance = <span class="keyword">new</span> TreeInstance();</span><br><span class="line">    tempInstance.prototypeIndex = <span class="number">0</span>;</span><br><span class="line">    tempInstance.color = Color.white;</span><br><span class="line">    tempInstance.heightScale = <span class="number">1</span>;</span><br><span class="line">    tempInstance.widthScale = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">float</span> x = UnityEngine.Random.Range(<span class="number">0f</span>, <span class="number">1f</span>);</span><br><span class="line">    <span class="keyword">float</span> y = UnityEngine.Random.Range(<span class="number">0f</span>, <span class="number">1f</span>);</span><br><span class="line">    tempInstance.position = <span class="keyword">new</span> Vector3(x, <span class="number">0</span>, y);</span><br><span class="line">    Debug.Log(tempInstance.position);</span><br><span class="line">    terrain.AddTreeInstance(tempInstance);</span><br><span class="line">    terrain.Flush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnApplicationQuit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;TreeInstance&gt; treeInstances = <span class="keyword">new</span> List&lt;TreeInstance&gt;(terrain.terrainData.treeInstances);</span><br><span class="line">    treeInstances.Clear();</span><br><span class="line">    terrain.terrainData.treeInstances = treeInstances.ToArray();</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line">改变所有树的状态，也同样需要借助数组。一开始想着遍历，按索引一个一个更改后分别增删。试了一番才明白每次都在第一个上面操作，然后删掉第一个才对。</span><br><span class="line">```csharp</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SwitchAllTreeColor</span>(<span class="params"></span>)<span class="comment">//0:spring/summer,1:fall,2:winter</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;TreeInstance&gt; treeInstances = <span class="keyword">new</span> List&lt;TreeInstance&gt;(terrain.terrainData.treeInstances);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; terrain.terrainData.treeInstances.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        TreeInstance tempInstance = <span class="keyword">new</span> TreeInstance();</span><br><span class="line">        tempInstance.prototypeIndex = season == <span class="number">0</span> ? <span class="number">0</span> : (season == <span class="number">1</span> ? <span class="number">0</span> : (season == <span class="number">2</span> ? <span class="number">0</span> : (season == <span class="number">3</span> ? <span class="number">1</span> : <span class="number">2</span>)));</span><br><span class="line">        tempInstance.color = treeInstances[<span class="number">0</span>].color;</span><br><span class="line">        tempInstance.lightmapColor = treeInstances[<span class="number">0</span>].lightmapColor;</span><br><span class="line">        tempInstance.heightScale = treeInstances[<span class="number">0</span>].heightScale;</span><br><span class="line">        tempInstance.widthScale = treeInstances[<span class="number">0</span>].widthScale;</span><br><span class="line">        tempInstance.position = treeInstances[<span class="number">0</span>].position;</span><br><span class="line">        treeInstances.RemoveAt(<span class="number">0</span>);</span><br><span class="line">        treeInstances.Add(tempInstance);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    terrain.terrainData.treeInstances = treeInstances.ToArray();</span><br><span class="line">    <span class="comment">// Debug.Log(terrain.terrainData.treeInstances.Length);</span></span><br><span class="line">    terrain.Flush();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="Terrain"><a href="#Terrain" class="headerlink" title="Terrain"></a>Terrain</h2><h3 id="Paint-Texture-Textures-用代码切换"><a href="#Paint-Texture-Textures-用代码切换" class="headerlink" title="Paint Texture - Textures 用代码切换"></a>Paint Texture - Textures 用代码切换</h3><p>默认使用原型列表中的第一个texture，所以改一下原型列表的次序。<br><strong>参考</strong>:<a href="https://blog.csdn.net/lei_7103/article/details/75389215" target="_blank" rel="noopener">动态更换地形纹理图</a><br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SplatPrototype[] oriSplatPrototypes = <span class="keyword">new</span> SplatPrototype[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    oriSplatPrototypes = terrain.terrainData.splatPrototypes;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SwitchSplat</span>(<span class="params"><span class="keyword">int</span> splat</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SplatPrototype[] newSplatPrototypes = <span class="keyword">new</span> SplatPrototype[<span class="number">1</span>];</span><br><span class="line">    newSplatPrototypes[<span class="number">0</span>] = oriSplatPrototypes[splat];</span><br><span class="line">    terrain.terrainData.splatPrototypes = newSplatPrototypes;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnApplicationQuit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    terrain.terrainData.splatPrototypes = oriSplatPrototypes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h3 id="Terrian-Settings-Base-Terrain-Material-Custom-shader-用代码切换"><a href="#Terrian-Settings-Base-Terrain-Material-Custom-shader-用代码切换" class="headerlink" title="Terrian Settings - Base Terrain - Material:Custom - shader 用代码切换"></a>Terrian Settings - Base Terrain - Material:Custom - shader 用代码切换</h3><p>Material不变，转而切换该材料所用的shader。<br><strong>参考</strong>:<a href="https://blog.csdn.net/thebluewing/article/details/72820162" target="_blank" rel="noopener">unity修改材质属性和更换shader</a><br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">terrain.materialTemplate.shader = Shader.Find(<span class="string">"Custom/myShader"</span>);</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;TerrainData&quot;&gt;&lt;a href=&quot;#TerrainData&quot; class=&quot;headerlink&quot; title=&quot;TerrainData&quot;&gt;&lt;/a&gt;TerrainData&lt;/h2&gt;&lt;h3 id=&quot;GetHeight-改成根据世界坐标来获取地形上的高度&quot;&gt;
      
    
    </summary>
    
    
      <category term="Unity3D" scheme="http://liaaaaa.github.io/tags/Unity3D/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://liaaaaa.github.io/2018/12/hello-world/"/>
    <id>http://liaaaaa.github.io/2018/12/hello-world/</id>
    <published>2018-12-17T13:10:26.303Z</published>
    <updated>2018-12-17T13:10:26.303Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
